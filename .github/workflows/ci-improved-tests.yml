name: improved-tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: main
          POSTGRES_PASSWORD: main
          POSTGRES_DB: main
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U main"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system build deps (incl. psql client)
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev python3-dev postgresql-client

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Core app deps (async psycopg driver + pydantic v2 extras, etc.)
          pip install fastapi "uvicorn[standard]" sqlalchemy psycopg2-binary psycopg pydantic[email] pydantic-settings httpx python-jose passlib[bcrypt] python-slugify
          # If your repo has a requirements.txt, install it too
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # Test tooling
          pip install pytest pytest-cov alembic

      - name: Configure env
        run: |
          echo "APP_ENV=test" >> $GITHUB_ENV
          # DSNs (set both sync/async style)
          echo "DATABASE_URL=postgresql+psycopg://main:main@localhost:5434/main" >> $GITHUB_ENV
          echo "ASYNC_DATABASE_URL=postgresql+psycopg://main:main@localhost:5434/main" >> $GITHUB_ENV
          echo "SQLALCHEMY_DATABASE_URI=postgresql+psycopg://main:main@localhost:5434/main" >> $GITHUB_ENV
          # PG* and POSTGRES_* fallbacks (some configs read these)
          echo "PGHOST=localhost" >> $GITHUB_ENV
          echo "PGPORT=5434" >> $GITHUB_ENV
          echo "PGUSER=main" >> $GITHUB_ENV
          echo "PGPASSWORD=main" >> $GITHUB_ENV
          echo "PGDATABASE=main" >> $GITHUB_ENV
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5434" >> $GITHUB_ENV
          echo "POSTGRES_DB=main" >> $GITHUB_ENV
          echo "POSTGRES_USER=main" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=main" >> $GITHUB_ENV
          echo "SECRET_KEY=test-secret-please-change" >> $GITHUB_ENV

      - name: Wait for Postgres to accept connections
        run: |
          for i in {1..30}; do
            pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" && break
            sleep 2
          done

      - name: Ensure database exists (idempotent)
        env:
          PGPASSWORD: ${{ env.PGPASSWORD }}
        run: |
          psql -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -tc "SELECT 1 FROM pg_database WHERE datname='${PGDATABASE}'" | grep -q 1 || \
          psql -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -c "CREATE DATABASE ${PGDATABASE};"

      # Try Alembic, but don't fail the job if that repo's env hardcodes a different port.
      - name: (Optional) Run migrations if Alembic is present
        if: ${{ hashFiles('alembic/**') != '' }}
        continue-on-error: true
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          ASYNC_DATABASE_URL: ${{ env.ASYNC_DATABASE_URL }}
          SQLALCHEMY_DATABASE_URI: ${{ env.SQLALCHEMY_DATABASE_URI }}
          PGHOST: ${{ env.PGHOST }}
          PGPORT: ${{ env.PGPORT }}
          PGUSER: ${{ env.PGUSER }}
          PGPASSWORD: ${{ env.PGPASSWORD }}
          PGDATABASE: ${{ env.PGDATABASE }}
        run: |
          alembic upgrade head || true

      - name: Run tests with coverage
        run: |
          mkdir -p reports
          pytest -q --maxfail=1 --cov=app --cov-branch --cov-report=xml:reports/coverage.xml --cov-report=term-missing --junitxml=reports/junit.xml

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports
